#pragma execution_character_set("utf-8")
#include "Jaka_120_Remote.h"
/*************************************************************************************************************************************************
**Function:    构造函数
**Others:      构造函数初始化在主线程实例化中完成，故在子线程中运行时，成员函数的初始化不能在构造函数中完成
*************************************************************************************************************************************************/
c_Jaka_120_Remote::c_Jaka_120_Remote(c_Jaka_Remote *parent) : c_Jaka_Remote(parent)
{
	
}
/*************************************************************************************************************************************************
**Function:    析构函数
*************************************************************************************************************************************************/
c_Jaka_120_Remote::~c_Jaka_120_Remote()
{
}
/*************************************************************************************************************************************************
**Function:    初始化函数
*************************************************************************************************************************************************/
void c_Jaka_120_Remote::Init()
{
	m_Name = "->左机械臂控制：";
	c_Jaka_Remote::Init();
	//提示信息
	QObject::connect(m_Jaka_Remote, &c_Jaka_Client::Status, this, [=](int value) {emit Status(c_Variable::g_Current_Time + "->左机械臂控制：" + c_Variable::TCP_Status(value)); });
	//循环连接
	QObject::connect(m_Jaka_Remote, &c_Jaka_Client::Connect_Loop, this, &c_Jaka_120_Remote::Connect_Loop);
}
/*************************************************************************************************************************************************
**Function:    操作接口
*************************************************************************************************************************************************/
void c_Jaka_120_Remote::Connect()
{
	m_Ip = c_Variable::g_Communicate_DB.value("Jaka_120_Ip").toString();
	m_Port = c_Variable::g_Communicate_DB.value("Jaka_Remote_Port").toInt();
	qDebug() << "c_Jaka_120_Remote::Connect";
	emit Connect_Device(m_Ip, m_Port);
}
/*************************************************************************************************************************************************
**Function:    循环连接
*************************************************************************************************************************************************/
void c_Jaka_120_Remote::Connect_Loop()
{
	QTimer::singleShot(6000, this, &c_Jaka_120_Remote::Connect);
}

